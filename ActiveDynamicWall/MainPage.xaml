<Page
    x:Class="ActiveDynamicWall.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ActiveDynamicWall"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource SystemControlAcrylicElementBrush}">

    <Grid>
        <StackPanel>
            <CommandBar Background="{ThemeResource SystemControlAcrylicWindowBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10">
                <AppBarButton Icon="Like" Style="{ThemeResource AppBarButtonRevealStyle}" Label="About This App">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="We are just starting with this app and we have big ideas for it. For now, the app applies a wallpaper to the desktop based on a specified time. Just pick an image and set the time for it before adding it to the app's list. the app will nun a process in the background every 15 minuts to check if it is time to apply this wallpaper." Margin="0,0,0,12" TextWrapping="Wrap"/>
                                <HyperlinkButton Content="Our GitHub Page" NavigateUri="https://github.com/xtai/mojave-dynamic-heic"/>
                                <HyperlinkButton Content="Join the conversation" NavigateUri="https://www.reddit.com/r/WPDev/comments/8trjdd/an_app_to_create_a_dynamic_wallpaper_effect_on/"/>
                                <HyperlinkButton Content="Flat select image icon is by Dimi Kazak" NavigateUri="https://www.flaticon.com/authors/dimi-kazak"/>
                                <HyperlinkButton Content="App Icon made by Freepik" NavigateUri="https://www.flaticon.com/authors/freepik"/>
                                <HyperlinkButton Content="licensed by Creative Commons BY 3.0" NavigateUri="http://creativecommons.org/licenses/by/3.0/"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </AppBarButton>
                <AppBarButton Icon="Important" Style="{ThemeResource AppBarButtonRevealStyle}" Label="How Does It Work?">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="The Layout of the app is similar to a day Calendar. You can add Images to a specific Time and it will be Automatically set as a Desktop or Lockscreen Wallpaper. It is possible with this app to manually create a dynamic Desktop and Lockscreen wallpaper similar to the one featured on Mac OS Mojave." TextWrapping="Wrap" Margin="0,0,0,12" />
                                <HyperlinkButton Content="Mojave Dynamic Heic " NavigateUri="https://github.com/xtai/mojave-dynamic-heic"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </AppBarButton>
                <AppBarSeparator />
                <AppBarToggleButton Icon="SetLockScreen" Label="Set to Lockscreen" Checked="ApplyToLockscreen" Unchecked="NotApplyToLockscreen"/>
                <AppBarToggleButton Icon="SetLockScreen" Label="Set to Desktop" Checked="ApplyToDesktop" Unchecked="NotApplyToDesktop"/>
                <AppBarSeparator />
                <AppBarButton Icon="Play" Label="Start Active Dynamic Wall" Click="StartDynamicWall"/>
                <AppBarButton Icon="Pause" Label="Stop Active Dynamic Wall" Click="StopBackgroundTask"/>
                <AppBarSeparator />
                <AppBarButton Icon="Refresh" Label="Remove all Wallpapers" Click="ResetApp"/>
            </CommandBar>
            <GridView Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel Margin="5">
                    <Button Height="170" Width="242" Style="{ThemeResource ButtonRevealStyle}" Background="{ThemeResource SystemControlAcrylicWindowBrush}" Click="FilePickerWallpaper" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center">
                        <StackPanel>
                            <Image x:Name="selectImg"/>
                            <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="Select Image" HorizontalAlignment="Center" Opacity="0.75"></TextBlock>
                        </StackPanel>
                    </Button>
                    <TimePicker Width="160" HorizontalAlignment="Left" Margin="0,10,0,10" VerticalAlignment="Center" Header="Time to Apply Wallpaper:" ClockIdentifier="24HourClock" x:Name="timeSelectedForWallpaper"></TimePicker>
                    <Button Height="40" Width="242" Style="{ThemeResource ButtonRevealStyle}" Opacity="0.75" Background="{ThemeResource SystemControlAcrylicWindowBrush}" Click="AddFile" HorizontalAlignment="Center" Margin="0,0,0,10" VerticalAlignment="Center">
                        <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="Add Image To Wallpaper List"></TextBlock>
                    </Button>
                    <Button Height="40" Width="242" Style="{ThemeResource ButtonRevealStyle}" Opacity="0.75" Background="{ThemeResource SystemControlAcrylicWindowBrush}" Click="RemoveFile" HorizontalAlignment="Center" Margin="0,0,0,10" VerticalAlignment="Center">
                        <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="Oops!"></TextBlock>
                    </Button>
                    <TextBlock x:Name="AddImageOutput" Style="{ThemeResource BaseTextBlockStyle}"></TextBlock>
                </StackPanel>
            </GridView>
            <GridView ItemsSource="{x:Bind wallpapers}" Margin="0,0,0,20">
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="local:Wallpaper">
                        <StackPanel Orientation="Vertical" Height="200">
                            <TextBlock HorizontalAlignment="Left" Margin="10" Text="{x:Bind fileName}"/>
                            <TextBlock HorizontalAlignment="Left" Margin="10" Text="Time to Apply"/>
                            <TextBlock HorizontalAlignment="Left" Margin="5" Text="{x:Bind time}"/>
                        </StackPanel>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
        </StackPanel>
    </Grid>
</Page>
